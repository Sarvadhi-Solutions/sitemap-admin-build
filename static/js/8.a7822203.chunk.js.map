{"version":3,"sources":["pages/dashboard/CouponForm.js"],"names":["CouponForm","_brandList$find","_useState","useState","width","height","_useState2","_slicedToArray","imageDimensions","setImageDimensions","_useState3","_useState4","cityOptions","setCityOptions","_useState5","_useState6","src","setSrc","_useState7","_useState8","image","setImage","_useState9","_useState10","selectedCities","setSelectedCities","_useState11","_useState12","brand","setBrand","_useState13","_useState14","selectedBrand","setSelectedBrand","_useState15","_useState16","selectedState","setSelectedState","_useState17","_useState18","stateOptions","setStateOptions","_useState19","_useState20","crop","setCrop","_useState21","_useState22","croppedImageUrls","setCroppedImageUrls","_useState23","_useState24","prevCrop","setPrevCrop","_useState25","_useState26","prevCrops","setPrevCrops","_useState27","_useState28","fromDate","setFromDate","_useState29","_useState30","processing","setProcessing","_useState31","_useState32","toDate","setToDate","imgRef","useRef","fileInputRef","_useState33","_useState34","cropNames","setCropNames","dispatch","useDispatch","enqueueSnackbar","useSnackbar","today","Date","selectImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","imageElement","wrap","_context","prev","next","URL","createObjectURL","Image","addEventListener","imageWidth","imageHeight","stop","_x","apply","arguments","useEffect","window","handleBack","removeEventListener","ListCities","ListBrands","ListStates","selectedBrandId","value","brandList","useSelector","state","_state$brand","cityList","_state$brand2","cities","selectedStateId","states","find","id","filter","city","state_id","error","_state$brand3","message","variant","newStateOptions","map","item","label","name","newCityOptions","concat","_toConsumableArray","newBrandOptions","brand_name","dataURLtoBlob","dataURL","arr","url","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","type","onSubmitHandle","_ref2","_callee2","currentDate","citiesId","coordinate","formdata","addCoupon","_context2","now","abrupt","dayjs","startOf","valueOf","JSON","stringify","FormData","append","forEach","index","blob","createCoupon","sent","status","current","navigate","PATH_DASHBOARD","general","coupon","useNavigate","_jsxs","_Fragment","children","_jsx","Backdrop","open","sx","color","zIndex","theme","drawer","CircularProgress","AnimatePresence","Card","HeaderBreadcrumbs","heading","Stack","direction","alignItems","IconButton","onClick","ArrowBackIcon","style","marginLeft","links","m","action","Button","startIcon","Iconify","icon","Scrollbar","spacing","p","minHeight","Grid","container","mb","xs","md","mt","InputLabel","display","fontWeight","Select","placeholder","options","onChange","marginRight","isMulti","optionsWithoutAllCities","option","some","handleChangeCitiesData","overflow","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DatePicker","minDate","date","justifyContent","accept","backgroundColor","transition","borderRadius","padding","letterSpacing","border","cursor","e","target","files","ref","position","flexDirection","flexWrap","ReactCrop","c","onComplete","pixelCrop","canvas","document","createElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","devicePixelRatio","Math","floor","scale","imageSmoothingQuality","cropX","x","cropY","y","save","drawImage","v4","_objectSpread","toDataURL","alt","minWidth","maxWidth","maxHeight","top","left","ml","right","RemoveCircleIcon","event","newCropNames","handleNameChange","Divider"],"mappings":"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","file":"static/js/8.a7822203.chunk.js","sourcesContent":["import { Backdrop, Card, Divider, CircularProgress } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport HeaderBreadcrumbs from \"src/components/HeaderBreadcrumbs\";\nimport Scrollbar from \"src/components/Scrollbar\";\nimport { Button, Grid, Stack } from \"@mui/material\";\nimport { IconButton } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport Iconify from \"src/components/Iconify\";\nimport Select from \"react-select\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"src/redux/store\";\nimport { useSnackbar } from \"notistack\";\nimport { ListBrands, ListCities, ListStates } from \"src/redux/slices/brand\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { createCoupon } from \"src/redux/slices/coupon\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\nimport { v4 } from \"uuid\";\nimport dayjs from \"dayjs\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { PATH_DASHBOARD } from \"src/routes/paths\";\n\nexport default function CouponForm() {\n  const [imageDimensions, setImageDimensions] = useState({\n    width: 0,\n    height: 0,\n  });\n  const [cityOptions, setCityOptions] = useState([]);\n  const [src, setSrc] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [brand, setBrand] = useState(null);\n  const [selectedBrand, setSelectedBrand] = useState();\n  const [selectedState, setSelectedState] = useState();\n  const [stateOptions, setStateOptions] = useState([]);\n  const [crop, setCrop] = useState();\n  const [croppedImageUrls, setCroppedImageUrls] = useState([]);\n  const [prevCrop, setPrevCrop] = useState();\n  const [prevCrops, setPrevCrops] = useState([]);\n  const [fromDate, setFromDate] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [toDate, setToDate] = useState(null);\n  const imgRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [cropNames, setCropNames] = useState([]);\n\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  let today = new Date();\n\n  const selectImage = async (file) => {\n    setImage(file);\n    setSrc(URL.createObjectURL(file));\n\n    const imageElement = new Image();\n    imageElement.addEventListener(\"load\", () => {\n      const imageWidth = imageElement.width;\n      const imageHeight = imageElement.height;\n      setImageDimensions({ width: imageWidth, height: imageHeight });\n    });\n\n    imageElement.src = URL.createObjectURL(file);\n  };\n\n  const handleCropComplete = (crop, pixelCrop) => {\n    if (imgRef.current && crop.width && crop.height) {\n      const canvas = document.createElement(\"canvas\");\n\n      const ctx = canvas.getContext(\"2d\");\n\n      if (ctx && imgRef.current) {\n        const image = imgRef.current;\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        const pixelRatio = window.devicePixelRatio;\n        canvas.width = Math.floor(crop.width * scaleX * pixelRatio);\n        canvas.height = Math.floor(crop.height * scaleY * pixelRatio);\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.imageSmoothingQuality = \"high\";\n        const scale = 1;\n        const cropX = crop.x * scaleX;\n        const cropY = crop.y * scaleY;\n\n        ctx.save();\n\n        ctx.scale(scale, scale);\n\n        ctx.drawImage(\n          imgRef.current,\n          cropX,\n          cropY,\n          canvas.width,\n          canvas.height,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        if (\n          !prevCrop ||\n          crop.x !== prevCrop.x ||\n          crop.y !== prevCrop.y ||\n          crop.width !== prevCrop.width ||\n          crop.height !== prevCrop.height\n        ) {\n          let id = v4();\n          setPrevCrop({ ...crop, id });\n          setPrevCrops([...prevCrops, { ...crop, id }]);\n          setCroppedImageUrls([\n            ...croppedImageUrls,\n            { id, url: canvas.toDataURL() },\n          ]);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"popstate\", handleBack);\n\n    return () => {\n      window.removeEventListener(\"popstate\", handleBack);\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch(ListCities());\n    dispatch(ListBrands());\n    dispatch(ListStates());\n  }, [dispatch]);\n\n  const selectedBrandId = selectedBrand?.value;\n  const brandList = useSelector((state) => state?.brand?.brandList);\n  const cityList = useSelector((state) => state?.brand?.cities);\n  const selectedStateId = selectedState?.value;\n\n  const states = brandList?.find(\n    (brand) => brand.id === selectedBrandId\n  )?.states;\n\n  const cities = cityList?.filter((city) => city.state_id === selectedStateId);\n  const error = useSelector((state) => state?.brand?.error);\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error.message, { variant: \"error\" });\n    }\n  }, [error, enqueueSnackbar]);\n\n  useEffect(() => {\n    if (states) {\n      const newStateOptions = states?.map((item) => {\n        return { value: item?.id, label: item?.name };\n      });\n\n      setStateOptions(newStateOptions);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    if (cityList && selectedState) {\n      const newCityOptions = cities?.map((item) => {\n        return { value: item?.id, label: item?.name };\n      });\n      const allCitiesOption = {\n        value: \"all-cities\",\n        label: \"Select all Cities\",\n      };\n      setCityOptions([allCitiesOption, ...newCityOptions]);\n    }\n  }, [cityList, selectedState]);\n\n  useEffect(() => {\n    const newBrandOptions = brandList?.map((item) => {\n      return { value: item?.id, label: item?.brand_name };\n    });\n    setBrand(newBrandOptions);\n  }, [brandList]);\n\n  useEffect(() => {\n    const newBrandOptions = brandList?.map((item) => {\n      return { value: item?.id, label: item?.brand_name };\n    });\n    setBrand(newBrandOptions);\n  }, [brandList]);\n\n  const handleChangeCitiesData = (value) => {\n    const optionsWithoutAllCities = cityOptions.filter(\n      (option) => option.value !== \"all-cities\"\n    );\n    if (value.some((option) => option.value === \"all-cities\")) {\n      setSelectedCities(optionsWithoutAllCities);\n    } else {\n      setSelectedCities(value);\n    }\n  };\n  const handleChangeBrandData = (selectedOptions) => {\n    setSelectedBrand(selectedOptions);\n  };\n  const handleChangeStateData = (selectedOptions) => {\n    setSelectedState(selectedOptions);\n  };\n\n  const handleNameChange = (index, name) => {\n    const newCropNames = [...cropNames];\n    newCropNames[index] = name;\n    setCropNames(newCropNames);\n  };\n\n  const dataURLtoBlob = (dataURL) => {\n    const arr = dataURL?.url.split(\",\");\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], { type: mime });\n  };\n  const onSubmitHandle = async () => {\n    const currentDate = Date.now();\n    if (!selectedBrand) {\n      enqueueSnackbar(\"Please select the brand\", { variant: \"error\" });\n      return;\n    } else if (!selectedCities.length) {\n      enqueueSnackbar(\"Please select atleast one city\", { variant: \"error\" });\n      return;\n    } else if (!selectedState) {\n      enqueueSnackbar(\"Please select state\", { variant: \"error\" });\n      return;\n    } else if (!fromDate || !toDate) {\n      enqueueSnackbar(\"Please select the date\", { variant: \"error\" });\n      return;\n    } else if (!crop) {\n      enqueueSnackbar(\"Please crop coupon\", { variant: \"error\" });\n      return;\n    } else if (toDate < fromDate || toDate < currentDate) {\n      enqueueSnackbar(\"Please add a valid TO date\", {\n        variant: \"error\",\n      });\n      return;\n    } else if (fromDate < dayjs(today).startOf(\"day\").valueOf()) {\n      enqueueSnackbar(\"Please add a valid FROM date\", {\n        variant: \"error\",\n      });\n      return;\n    } else if (!image) {\n      enqueueSnackbar(\"Please upload a image\", { variant: \"error\" });\n      return;\n    } else {\n      setProcessing(true);\n    }\n\n    let citiesId = selectedCities?.map((item) => item?.value);\n    let state_id = selectedState?.value;\n    const coordinate = JSON.stringify(prevCrops);\n    let formdata = new FormData();\n    formdata.append(\"brand_id\", selectedBrand.value);\n    formdata.append(\"main_image_width\", imageDimensions.width);\n    formdata.append(\"main_image_height\", imageDimensions.height);\n\n    formdata.append(\"image\", image);\n    citiesId.map((item) => {\n      formdata.append(\"city_id\", item);\n    });\n    formdata.append(\"state_id\", state_id);\n    formdata.append(\"start_date\", fromDate);\n    formdata.append(\"expiry_date\", toDate);\n    formdata.append(\"crop_coordinate\", coordinate);\n    croppedImageUrls.forEach((url, index) => {\n      const name = cropNames[index];\n      formdata.append(\"crop_image_name\", name);\n      const blob = dataURLtoBlob(url);\n      formdata.append(\"crop_images\", blob, `${name}.png`);\n      formdata.append(\"crop_image_id\", url.id);\n    });\n\n    const addCoupon = await dispatch(createCoupon(formdata));\n    if (addCoupon?.status) {\n      enqueueSnackbar(\"Coupon SuccessFully Added!!\");\n      setSelectedBrand(null);\n      setSelectedState(null);\n      setSelectedCities([]);\n      setImage(null);\n      setCroppedImageUrls([]);\n      setFromDate(null);\n      setToDate(null);\n      setSrc(null);\n      setPrevCrop(null);\n      setPrevCrops([]);\n      setCrop(null);\n      fileInputRef.current.value = null;\n    }\n    setProcessing(false);\n    navigate(PATH_DASHBOARD.general.coupon);\n  };\n  const handleDeleteCrop = (id) => {\n    setCroppedImageUrls(croppedImageUrls.filter((crop) => crop.id !== id));\n    setPrevCrops(prevCrops.filter((crop) => crop.id !== id));\n  };\n  const navigate = useNavigate();\n  const handleBack = () => {\n    navigate(PATH_DASHBOARD.general.coupon);\n  };\n\n  return (\n    <>\n      {processing && (\n        <Backdrop\n          open={processing}\n          sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n      <AnimatePresence>\n        <Card>\n          <HeaderBreadcrumbs\n            heading={\n              <Stack direction=\"row\" alignItems=\"center\">\n                <IconButton onClick={handleBack}>\n                  <ArrowBackIcon />\n                </IconButton>\n                <span style={{ marginLeft: 8 }}>Add Coupon</span>\n              </Stack>\n            }\n            links={[]}\n            sx={{ m: 2 }}\n            action={\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                startIcon={<Iconify icon={\"eva:plus-fill\"} />}\n                onClick={() => {\n                  onSubmitHandle();\n                }}\n              >\n                Save\n              </Button>\n            }\n          />\n          <Scrollbar>\n            <Stack spacing={3} sx={{ p: \"24px 24px 82px\", minHeight: \"500px\" }}>\n              <Grid container spacing={3} sx={{ mb: 2 }}>\n                <Grid item xs={12} md={12}>\n                  <Stack spacing={3} direction=\"row\" sx={{ mt: 2 }}>\n                    <InputLabel\n                      id=\"brand-label\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: 900,\n                      }}\n                    >\n                      Brand\n                    </InputLabel>\n                    <Select\n                      placeholder={\"select brand\"}\n                      options={brand}\n                      value={selectedBrand}\n                      onChange={(value) => handleChangeBrandData(value)}\n                    />\n                  </Stack>\n\n                  <Stack spacing={3} direction=\"row\" sx={{ mt: 2 }}>\n                    <InputLabel\n                      id=\"state-label\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: 900,\n                      }}\n                    >\n                      State\n                    </InputLabel>\n                    <Select\n                      placeholder={\"select state\"}\n                      options={stateOptions}\n                      value={selectedState}\n                      onChange={(value) => handleChangeStateData(value)}\n                    />\n                  </Stack>\n\n                  <Stack spacing={3} direction=\"row\" sx={{ mt: 2 }}>\n                    <InputLabel\n                      id=\"city-label\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: 900,\n                        marginRight: \"14px\",\n                      }}\n                    >\n                      City\n                    </InputLabel>\n                    <Select\n                      isMulti\n                      placeholder={\"select cities\"}\n                      options={cityOptions}\n                      value={selectedCities}\n                      onChange={(value) => handleChangeCitiesData(value)}\n                    />\n                  </Stack>\n                  <Stack spacing={3} direction=\"row\" sx={{ mt: 1 }}>\n                    <InputLabel\n                      id=\"expirydate-label\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: 900,\n                      }}\n                    >\n                      Expiry Date :\n                    </InputLabel>\n                    <InputLabel\n                      id=\"fromDate-label\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: 900,\n                        overflow: \"visible\",\n                      }}\n                    >\n                      From\n                    </InputLabel>\n\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                      <DemoContainer components={[\"DatePicker\"]}>\n                        <DatePicker\n                          label=\"Select Date\"\n                          value={fromDate}\n                          minDate={dayjs(today)}\n                          onChange={(date) => {\n                            setFromDate(date);\n                          }}\n                        />\n                      </DemoContainer>\n                    </LocalizationProvider>\n                    <InputLabel\n                      id=\"to-label\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: 900,\n                        overflow: \"visible\",\n                      }}\n                    >\n                      To\n                    </InputLabel>\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                      <DemoContainer components={[\"DatePicker\"]}>\n                        <DatePicker\n                          label=\"Select Date\"\n                          value={toDate}\n                          onChange={(date) => setToDate(date)}\n                          minDate={dayjs(today)}\n                        />\n                      </DemoContainer>\n                    </LocalizationProvider>\n                  </Stack>\n                  <Stack\n                    spacing={3}\n                    direction=\"row\"\n                    justifyContent=\"flex-start\"\n                    sx={{ mt: 2, mb: 3 }}\n                  >\n                    <InputLabel\n                      id=\"iamge-label\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        fontWeight: 900,\n                      }}\n                    >\n                      Image\n                    </InputLabel>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      style={{\n                        backgroundColor: \"rgba(145, 158, 171, 0.12)\",\n                        transition:\n                          \"opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n                        borderRadius: 10,\n                        padding: 10,\n                        fontWeight: 900,\n                        letterSpacing: 1,\n                        border: \"none\",\n                        cursor: \"pointer\",\n                      }}\n                      onChange={(e) => {\n                        selectImage(e.target.files[0]);\n                      }}\n                      ref={fileInputRef}\n                    />\n                  </Stack>\n\n                  <Stack\n                    spacing={3}\n                    direction=\"row\"\n                    justifyContent=\"flex-start\"\n                    sx={{ mt: 1 }}\n                  />\n                  <div\n                    style={{\n                      position: \"relative\",\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                    }}\n                  >\n                    {src && (\n                      <div\n                        style={{\n                          position: \"relative\",\n                          marginRight: \"50px\",\n                        }}\n                      >\n                        <ReactCrop\n                          crop={crop}\n                          onChange={(c) => setCrop(c)}\n                          onComplete={handleCropComplete}\n                        >\n                          <img\n                            ref={imgRef}\n                            src={src}\n                            alt=\"avatar\"\n                            style={{\n                              width: imageDimensions.width,\n                              height: imageDimensions.height,\n                              minWidth: imageDimensions.width,\n                              minHeight: imageDimensions.height,\n                              maxWidth: imageDimensions.width,\n                              maxHeight: imageDimensions.height,\n                            }}\n                          />\n                        </ReactCrop>\n                      </div>\n                    )}\n                    {crop &&\n                      prevCrops.map((prevCrop, index) => (\n                        <div\n                          key={index}\n                          style={{\n                            position: \"absolute\",\n                            width: prevCrop?.width,\n                            height: prevCrop?.height,\n                            top: prevCrop?.y,\n                            left: prevCrop?.x,\n                            backgroundColor: \"rgba(188, 68, 68, 0.5)\",\n                            zIndex: 2,\n                          }}\n                        ></div>\n                      ))}\n                    {croppedImageUrls.length > 0 && (\n                      <Stack\n                        spacing={3}\n                        direction=\"column\"\n                        justifyContent=\"flex-start\"\n                        sx={{ mt: 1, ml: 5 }}\n                      >\n                        {croppedImageUrls.map((url, index) => (\n                          <div\n                            key={index}\n                            style={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              flexWrap: \"wrap\",\n                            }}\n                          >\n                            <div\n                              style={{\n                                position: \"relative \",\n                                width: \"100px\",\n                                height: \"100px\",\n                              }}\n                            >\n                              <img\n                                src={url.url}\n                                alt={`cropped-${index}`}\n                                style={{ width: \"100px\", height: \"100px\" }}\n                              />\n                              <div\n                                style={{\n                                  position: \"absolute\",\n                                  top: \"0\",\n                                  right: \"0\",\n                                  padding: \"5px\",\n                                  cursor: \"pointer\",\n                                  color: \"white\",\n                                  backgroundColor: \"rgba(0, 0, 0,0.5)\",\n                                  borderRadius: \"50%\",\n                                  display: \"flex\",\n                                  justifyContent: \"center\",\n                                  alignItems: \"center\",\n                                }}\n                              >\n                                <RemoveCircleIcon\n                                  onClick={() => handleDeleteCrop(url.id)}\n                                />\n                              </div>\n                            </div>\n                            <div>\n                              <input\n                                type=\"text\"\n                                name=\"name\"\n                                placeholder=\"Crop Coupon Name\"\n                                value={cropNames[index] || \"\"}\n                                onChange={(event) =>\n                                  handleNameChange(index, event.target.value)\n                                }\n                                style={{\n                                  marginLeft: 20,\n                                  border: \"1px solid hsl(0, 0%, 80%)\",\n                                  transition:\n                                    \"opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n                                  borderRadius: 5,\n                                  padding: 5,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        ))}\n                      </Stack>\n                    )}\n                  </div>\n                </Grid>\n              </Grid>\n            </Stack>\n          </Scrollbar>\n          <Divider />\n        </Card>\n      </AnimatePresence>\n    </>\n  );\n}\n"],"sourceRoot":""}