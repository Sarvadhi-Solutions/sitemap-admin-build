{"version":3,"sources":["sections/@dashboard/general/app/BrandForm.js","pages/dashboard/GeneralBrand.js"],"names":["RootStyle","styled","m","div","_ref","theme","_objectSpread","cssStyles","bgBlur","color","palette","background","paper","opacity","top","right","bottom","display","position","overflow","width","flexDirection","margin","spacing","paddingBottom","zIndex","drawer","borderRadius","Number","shape","boxShadow","concat","alpha","mode","grey","common","black","BrandForm","_ref2","_stateList$find","callBack","data","_useState","useState","_useState2","_slicedToArray","editData","setEditData","_useState3","_useState4","profilePic","setProfilePic","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","selectedState","setSelectedState","_useState11","_useState12","category","setCategory","_useState13","_useState14","setSelectedCities","_useState15","_useState16","selectedCategories","setSelectedCategories","_useState17","_useState18","processing","setProcessing","_useState19","_useState20","setCityOptions","_useState21","_useState22","stateOptions","setStateOptions","dispatch","useDispatch","enqueueSnackbar","useSnackbar","defaultValues","brand_name","useEffect","isEmpty","stateList","useSelector","state","_state$brand","brand","states","_editData$category","_editData$state","_editData$city","map","item","value","id","label","name","selectedStateOption","city","ListCities","ListCategories","ListStates","cities","find","categories","_state$brand2","error","_state$brand3","message","variant","newCityOptions","_toConsumableArray","newStateOptions","newCategoryOptions","BrandSchema","Yup","required","methods","useForm","resolver","yupResolver","handleDrop","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","acceptedFiles","file","wrap","_context","prev","next","console","log","Object","assign","preview","URL","createObjectURL","stop","_x","apply","arguments","handleSubmit","onSubmit","_ref4","_callee2","payloadData","categoriesId","statesId","formdata","editCategory","_categoriesId","_statesId","_formdata","addCategory","_context2","FormData","append","abrupt","length","updateBrand","sent","status","createBrand","_x2","_jsxs","_Fragment","children","_jsx","Backdrop","open","sx","CircularProgress","AnimatePresence","Stack","direction","alignItems","justifyContent","py","pr","pl","Typography","IconButtonAnimate","onClick","Iconify","icon","height","Divider","Scrollbar","flexGrow","p","FormProvider","Grid","container","mb","xs","md","UploadAvatar","logo","accept","onDrop","RHFTextField","mt","autoComplete","Select","isMulti","placeholder","options","onChange","optionsWithoutAllStates","filter","option","some","handleChangeStateData","Button","type","GeneralBrand","themeStretch","useSettings","isOpen","setIsOpen","drawerOpenAndClose","Page","title","Container","maxWidth","MotionLazyContainer","lg","AppNewBrand","updateForm","onEdit"],"mappings":"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","file":"static/js/12.11dfd4a9.chunk.js","sourcesContent":["import {\n  Backdrop,\n  Button,\n  CircularProgress,\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { alpha, styled } from \"@mui/material/styles\";\nimport { AnimatePresence, m } from \"framer-motion\";\nimport { useForm } from \"react-hook-form\";\nimport { IconButtonAnimate } from \"src/components/animate\";\nimport { FormProvider, RHFTextField } from \"src/components/hook-form\";\nimport Iconify from \"src/components/Iconify\";\nimport Scrollbar from \"src/components/Scrollbar\";\nimport cssStyles from \"src/utils/cssStyles\";\nimport {\n  createBrand,\n  ListCategories,\n  ListCities,\n  ListStates,\n  updateBrand,\n} from \"src/redux/slices/brand\";\nimport { useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect, useState } from \"react\";\nimport { UploadAvatar } from \"src/components/upload\";\nimport Select from \"react-select\";\nimport { useSelector } from \"src/redux/store\";\nimport { isEmpty } from \"lodash\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\n\nconst RootStyle = styled(m.div)(({ theme }) => ({\n  ...cssStyles(theme).bgBlur({\n    color: theme.palette.background.paper,\n    opacity: 0.92,\n  }),\n  top: 0,\n  right: 0,\n  bottom: 0,\n  display: \"flex\",\n  position: \"fixed\",\n  overflow: \"hidden\",\n  width: 400,\n  flexDirection: \"column\",\n  margin: theme.spacing(2),\n  paddingBottom: theme.spacing(3),\n  zIndex: theme.zIndex.drawer + 3,\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\n  boxShadow: `-24px 12px 32px -4px ${alpha(\n    theme.palette.mode === \"light\"\n      ? theme.palette.grey[500]\n      : theme.palette.common.black,\n    0.16\n  )}`,\n}));\n\nexport default function BrandForm({ callBack, data }) {\n  const [editData, setEditData] = useState(data);\n  const [profilePic, setProfilePic] = useState(\"\");\n  const [city, setCity] = useState(null);\n  const [state, setState] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [category, setCategory] = useState(null);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [processing, setProcessing] = useState(false);\n  const [cityOptions, setCityOptions] = useState([]);\n  const [stateOptions, setStateOptions] = useState([]);\n\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const defaultValues = {\n    brand_name: editData?.brand_name || \"\",\n  };\n\n  useEffect(() => {\n    if (!isEmpty(data)) {\n      setEditData(data);\n    }\n  }, [data]);\n\n  const stateList = useSelector((state) => state?.brand?.states);\n  useEffect(() => {\n    setSelectedCategories(\n      editData?.category?.map((item) => {\n        return { value: item?.id, label: item?.name };\n      })\n    );\n\n    if (editData?.state && stateList) {\n      const selectedStateOption = {\n        value: editData.state.id,\n        label: editData.state.name,\n      };\n      setSelectedState(selectedStateOption);\n    }\n\n    setSelectedState(\n      editData?.state?.map((item) => {\n        return { value: item?.id, label: item?.name };\n      })\n    );\n    setSelectedCities(\n      editData?.city?.map((item) => {\n        return { value: item?.id, label: item?.name };\n      })\n    );\n  }, [editData, stateList]);\n\n  useEffect(() => {\n    dispatch(ListCities());\n    dispatch(ListCategories());\n    dispatch(ListStates());\n  }, []);\n\n  const cities = stateList?.find(\n    (city) => city.id === selectedState?.value\n  )?.cities;\n  const categories = useSelector((state) => state?.brand?.categories);\n  const error = useSelector((state) => state?.brand?.error);\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error.message, { variant: \"error\" });\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (cities) {\n      const newCityOptions = cities?.map((item) => {\n        return { value: item?.id, label: item?.name };\n      });\n      const allCitiesOption = {\n        value: \"all-cities\",\n        label: \"Select all Cities\",\n      };\n      setCityOptions([allCitiesOption, ...newCityOptions]);\n    }\n  }, [cities]);\n\n  useEffect(() => {\n    if (stateList) {\n      const newStateOptions = stateList?.map((item) => {\n        return { value: item?.id, label: item?.name };\n      });\n      const allStatesOption = {\n        value: \"all-states\",\n        label: \"Select all States\",\n      };\n      setStateOptions([allStatesOption, ...newStateOptions]);\n    }\n  }, [stateList]);\n\n  useEffect(() => {\n    const newCategoryOptions = categories?.map((item) => {\n      return { value: item?.id, label: item?.name };\n    });\n    setCategory(newCategoryOptions);\n  }, [categories]);\n\n  const BrandSchema = Yup.object().shape({\n    brand_name: Yup.string().required(\"Brand name is required\"),\n    // logo: ImageSchema.fields.image,\n    // selectedCities: Yup.array().min(1, \"At least one city is required\"),\n    // selectedCategories: Yup.array().min(1, \"At least one category is required\"),\n  });\n\n  const methods = useForm({\n    resolver: yupResolver(BrandSchema),\n    defaultValues,\n  });\n\n  const handleDrop = async (acceptedFiles) => {\n    console.log({ acceptedFiles });\n    const file = acceptedFiles[0];\n    setProfilePic(\n      Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      })\n    );\n  };\n\n  const { handleSubmit } = methods;\n  const onSubmit = async (payloadData) => {\n    if (editData?.id) {\n      const categoriesId = selectedCategories?.map((item) => item?.value);\n\n      // let citiesId = selectedCities?.map((item) => item?.value);\n      let statesId = selectedState?.map((item) => item?.value);\n\n      let formdata = new FormData();\n      formdata.append(\"brand_name\", payloadData?.brand_name);\n      // citiesId.map((item) => formdata.append(\"city_id\", item));\n      statesId.map((item) => formdata.append(\"state_id\", item));\n      // formdata.append(\"state_id\", selectedState?.value);\n\n      categoriesId.map((item) => formdata.append(\"category_id\", item));\n      if (profilePic) {\n        formdata.append(\"logo\", profilePic);\n      }\n      if (!selectedState) {\n        enqueueSnackbar(\"Please select the state\", { variant: \"error\" });\n        return;\n      }\n      // if (!selectedCities.length) {\n      //   enqueueSnackbar(\"Please select atleast one city\", { variant: \"error\" });\n      //   return;\n      // }\n      else if (!selectedCategories.length) {\n        enqueueSnackbar(\"Please select atleast one category\", {\n          variant: \"error\",\n        });\n        return;\n      } else {\n        setProcessing(true);\n      }\n      const editCategory = await dispatch(updateBrand(editData?.id, formdata));\n      if (editCategory?.status) {\n        enqueueSnackbar(\"Brand SuccessFully Updated!!\");\n        callBack();\n      }\n    } else {\n      const categoriesId = selectedCategories?.map((item) => item?.value);\n\n      // const citiesId = selectedCities?.map((item) => item?.value);\n      let statesId = selectedState?.map((item) => item?.value);\n\n      if (!selectedState) {\n        enqueueSnackbar(\"Please select the state\", { variant: \"error\" });\n        return;\n      } else if (!selectedCategories.length) {\n        enqueueSnackbar(\"Please select atleast one category\", {\n          variant: \"error\",\n        });\n        return;\n      } else if (!profilePic) {\n        enqueueSnackbar(\"Please upload a image\", { variant: \"error\" });\n        return;\n      }\n      const formdata = new FormData();\n      statesId.map((item) => formdata.append(\"state_id\", item));\n\n      formdata.append(\"brand_name\", payloadData?.brand_name);\n      categoriesId.map((item) => {\n        formdata.append(\"category_id\", item);\n      });\n      formdata.append(\"logo\", profilePic);\n\n      const addCategory = await dispatch(createBrand(formdata));\n      if (addCategory?.status) {\n        enqueueSnackbar(\"Brand SuccessFully Added!!\");\n      }\n      callBack();\n    }\n    setProcessing(false);\n  };\n\n  // const handleChangeCitiesData = (selectedOptions) => {\n  //   setSelectedCities(selectedOptions);\n  // };\n\n  const handleChangeCitiesData = (value) => {\n    const optionsWithoutAllCities = cityOptions.filter(\n      (option) => option.value !== \"all-cities\"\n    );\n    if (value.some((option) => option.value === \"all-cities\")) {\n      setSelectedCities(optionsWithoutAllCities);\n    } else {\n      setSelectedCities(value);\n    }\n  };\n\n  const handleChangeCategoriesData = (selectedOptions) => {\n    setSelectedCategories(selectedOptions);\n  };\n  const handleChangeStateData = (value) => {\n    const optionsWithoutAllStates = stateOptions.filter(\n      (option) => option.value !== \"all-states\"\n    );\n    if (value.some((option) => option.value === \"all-states\")) {\n      setSelectedState(optionsWithoutAllStates);\n    } else {\n      setSelectedState(value);\n    }\n    // setSelectedState(selectedOptions);\n    // setSelectedCities([]);\n  };\n  return (\n    <>\n      {processing && (\n        <Backdrop\n          open={processing}\n          sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n      <AnimatePresence>\n        <>\n          <RootStyle>\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              sx={{ py: 2, pr: 1, pl: 2.5 }}\n            >\n              <Typography variant=\"subtitle1\">\n                {editData?.id ? \"Edit Brand\" : \"Add Brand\"}\n              </Typography>\n              <div>\n                <IconButtonAnimate onClick={() => callBack()}>\n                  <Iconify icon={\"eva:close-fill\"} width={20} height={20} />\n                </IconButtonAnimate>\n              </div>\n            </Stack>\n            <Divider />\n            <Scrollbar sx={{ flexGrow: 1 }}>\n              <Stack spacing={3} sx={{ p: \"24px 24px 82px\" }}>\n                <FormProvider\n                  methods={methods}\n                  onSubmit={handleSubmit(onSubmit)}\n                >\n                  <Grid container spacing={3} sx={{ mb: 2 }}>\n                    <Grid item xs={12} md={12} sx={{ height: \"550px\" }}>\n                      <UploadAvatar\n                        name=\"logo\"\n                        file={profilePic ? profilePic : editData?.logo}\n                        accept=\"image/*\"\n                        onDrop={handleDrop}\n                      />\n                      <RHFTextField\n                        sx={{ mt: 2 }}\n                        name=\"brand_name\"\n                        label=\"Brand Name*\"\n                        autoComplete=\"off\"\n                      />\n                      <Stack spacing={3} sx={{ mt: 2 }}>\n                        <Select\n                          isMulti\n                          placeholder={\"select states\"}\n                          options={stateOptions}\n                          value={selectedState}\n                          onChange={(value) => handleChangeStateData(value)}\n                        />\n                      </Stack>\n                      {/* <Stack spacing={3} sx={{ mt: 2 }}>\n                        <Select\n                          isMulti\n                          placeholder={\"select cities\"}\n                          options={cityOptions}\n                          isDisabled={!selectedState}\n                          value={selectedCities}\n                          onChange={(value) => handleChangeCitiesData(value)}\n                        />\n                      </Stack> */}\n                      <Stack spacing={3} sx={{ mt: 2 }}>\n                        <Select\n                          name=\"category_id\"\n                          isMulti\n                          placeholder={\"select categories\"}\n                          options={category}\n                          value={selectedCategories}\n                          onChange={(value) =>\n                            handleChangeCategoriesData(value)\n                          }\n                        />\n                      </Stack>\n                      <Stack\n                        spacing={3}\n                        alignItems=\"flex-end\"\n                        justifyContent=\"flex-end\"\n                        direction=\"row\"\n                        sx={{ mt: 2 }}\n                      >\n                        <Button type=\"submit\" variant=\"outlined\">\n                          {editData?.id ? \"Save\" : \"Add\"}\n                        </Button>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                </FormProvider>\n              </Stack>\n            </Scrollbar>\n          </RootStyle>\n        </>\n      </AnimatePresence>\n    </>\n  );\n}\n","// hooks\nimport useSettings from \"../../hooks/useSettings\";\nimport { Container, Grid } from \"@mui/material\";\n// components\nimport Page from \"../../components/Page\";\n// hooks\nimport { MotionLazyContainer } from \"src/components/animate\";\nimport { useState } from \"react\";\nimport BrandForm from \"src/sections/@dashboard/general/app/BrandForm\";\nimport AppNewBrand from \"src/sections/@dashboard/general/app/AppNewBrand\";\n\nexport default function GeneralBrand() {\n  const { themeStretch } = useSettings();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [editData, setEditData] = useState({});\n  const drawerOpenAndClose = () => {\n    setEditData();\n    setIsOpen(!isOpen);\n  };\n  const onEdit = (item) => {\n    setEditData(item);\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Page title=\"General: App\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        {isOpen && (\n          <MotionLazyContainer>\n            <BrandForm callBack={() => drawerOpenAndClose()} data={editData} />\n          </MotionLazyContainer>\n        )}\n\n        <Grid item xs={12} lg={8}>\n          <AppNewBrand\n            callBack={() => drawerOpenAndClose()}\n            updateForm={(item) => {\n              onEdit(item);\n            }}\n          />\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}