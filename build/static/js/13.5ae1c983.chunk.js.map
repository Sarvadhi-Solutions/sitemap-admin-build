{"version":3,"sources":["sections/@dashboard/general/app/CategoryForm.js","pages/dashboard/GeneralCategory.js"],"names":["RootStyle","styled","m","div","_ref","theme","_objectSpread","cssStyles","bgBlur","color","palette","background","paper","opacity","top","right","bottom","display","position","overflow","width","flexDirection","margin","spacing","paddingBottom","zIndex","drawer","borderRadius","Number","shape","boxShadow","concat","alpha","mode","grey","common","black","CategoryForm","_ref2","callBack","data","_useState","useState","_useState2","_slicedToArray","editData","setEditData","dispatch","useDispatch","_useState3","_useState4","processing","setProcessing","enqueueSnackbar","useSnackbar","useEffect","isEmpty","defaultValues","name","console","log","LoginSchema","Yup","required","methods","useForm","resolver","yupResolver","handleSubmit","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payloadData","editCategory","addCategory","wrap","_context","prev","next","id","updateCategory","sent","status","createCategory","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Backdrop","open","sx","CircularProgress","AnimatePresence","Stack","direction","alignItems","justifyContent","py","pr","pl","Typography","variant","IconButtonAnimate","onClick","Iconify","icon","height","Divider","Scrollbar","flexGrow","p","FormProvider","Grid","container","mb","item","xs","md","RHFTextField","mt","label","autoComplete","Button","type","GeneralCategory","themeStretch","useSettings","isOpen","setIsOpen","drawerOpenAndClose","Page","title","Container","maxWidth","MotionLazyContainer","lg","AppNewCategory","updateForm","onEdit"],"mappings":"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","file":"static/js/13.5ae1c983.chunk.js","sourcesContent":["import {\n  Backdrop,\n  Button,\n  CircularProgress,\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { alpha, styled } from \"@mui/material/styles\";\nimport { AnimatePresence, m } from \"framer-motion\";\nimport { useForm } from \"react-hook-form\";\nimport { IconButtonAnimate } from \"src/components/animate\";\nimport { FormProvider, RHFTextField } from \"src/components/hook-form\";\nimport Iconify from \"src/components/Iconify\";\nimport Scrollbar from \"src/components/Scrollbar\";\nimport cssStyles from \"src/utils/cssStyles\";\nimport { createCategory, updateCategory } from \"src/redux/slices/category\";\nimport { useDispatch } from \"react-redux\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect, useState } from \"react\";\nimport { isEmpty } from \"lodash\";\n\nconst RootStyle = styled(m.div)(({ theme }) => ({\n  ...cssStyles(theme).bgBlur({\n    color: theme.palette.background.paper,\n    opacity: 0.92,\n  }),\n  top: 0,\n  right: 0,\n  bottom: 0,\n  display: \"flex\",\n  position: \"fixed\",\n  overflow: \"hidden\",\n  width: 400,\n  flexDirection: \"column\",\n  margin: theme.spacing(2),\n  paddingBottom: theme.spacing(3),\n  zIndex: theme.zIndex.drawer + 3,\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\n  boxShadow: `-24px 12px 32px -4px ${alpha(\n    theme.palette.mode === \"light\"\n      ? theme.palette.grey[500]\n      : theme.palette.common.black,\n    0.16\n  )}`,\n}));\n\nexport default function CategoryForm({ callBack, data }) {\n  const [editData, setEditData] = useState(data);\n  const dispatch = useDispatch();\n  const [processing, setProcessing] = useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (!isEmpty(data)) {\n      setEditData(data);\n    }\n  }, [data]);\n\n  const defaultValues = {\n    name: editData?.name || \"\",\n  };\n  console.log({ editData });\n  const LoginSchema = Yup.object().shape({\n    name: Yup.string().required(\"Category name is required\"),\n  });\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const { handleSubmit } = methods;\n\n  const onSubmit = async (payloadData) => {\n    setProcessing(true);\n\n    if (editData?.id) {\n      const editCategory = await dispatch(\n        updateCategory(editData?.id, payloadData)\n      );\n      if (editCategory?.status) {\n        enqueueSnackbar(\"Category SuccessFully Updated!!\");\n        callBack();\n      }\n    } else {\n      const addCategory = await dispatch(createCategory(payloadData));\n      if (addCategory?.status) {\n        enqueueSnackbar(\"Category SuccessFully Added!!\");\n      }\n      callBack();\n    }\n    setProcessing(false);\n  };\n\n  return (\n    <>\n      {processing && (\n        <Backdrop\n          open={processing}\n          sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n      <AnimatePresence>\n        <>\n          <RootStyle>\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              sx={{ py: 2, pr: 1, pl: 2.5 }}\n            >\n              <Typography variant=\"subtitle1\">\n                {editData?.id ? \"Edit Category\" : \"Add Category\"}\n              </Typography>\n              <div>\n                <IconButtonAnimate onClick={() => callBack()}>\n                  <Iconify icon={\"eva:close-fill\"} width={20} height={20} />\n                </IconButtonAnimate>\n              </div>\n            </Stack>\n            <Divider />\n            <Scrollbar sx={{ flexGrow: 1 }}>\n              <Stack spacing={3} sx={{ p: \"24px 24px 82px\" }}>\n                <FormProvider\n                  methods={methods}\n                  onSubmit={handleSubmit(onSubmit)}\n                >\n                  <Grid container spacing={3} sx={{ mb: 2 }}>\n                    <Grid item xs={12} md={12}>\n                      <RHFTextField\n                        sx={{ mt: 2 }}\n                        name=\"name\"\n                        label=\"Category Name*\"\n                        autoComplete=\"off\"\n                      />\n                      <Stack\n                        spacing={3}\n                        alignItems=\"flex-end\"\n                        justifyContent=\"flex-end\"\n                        direction=\"row\"\n                        sx={{ mt: 2 }}\n                      >\n                        <Button type=\"submit\" variant=\"outlined\">\n                          {editData?.id ? \"Save\" : \"Add\"}\n                        </Button>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                </FormProvider>\n              </Stack>\n            </Scrollbar>\n          </RootStyle>\n        </>\n      </AnimatePresence>\n    </>\n  );\n}\n","import { Container, Grid } from \"@mui/material\";\n// components\nimport Page from \"../../components/Page\";\n// hooks\nimport useSettings from \"../../hooks/useSettings\";\nimport { AppNewCategory } from \"src/sections/@dashboard/general/app\";\nimport { MotionLazyContainer } from \"src/components/animate\";\nimport { useState } from \"react\";\nimport CategoryForm from \"src/sections/@dashboard/general/app/CategoryForm\";\n\nexport default function GeneralCategory() {\n  const { themeStretch } = useSettings();\n  const [isOpen, setIsOpen] = useState(false);\n  const [editData, setEditData] = useState({});\n  const drawerOpenAndClose = () => {\n    setIsOpen(!isOpen);\n    setEditData({});\n  };\n  const onEdit = (item) => {\n    setEditData(item);\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Page title=\"General: App\">\n      <Container maxWidth={themeStretch ? false : \"xl\"}>\n        {isOpen && (\n          <MotionLazyContainer>\n            <CategoryForm\n              callBack={() => drawerOpenAndClose()}\n              data={editData}\n            />\n          </MotionLazyContainer>\n        )}\n\n        <Grid item xs={12} lg={8}>\n          <AppNewCategory\n            callBack={() => drawerOpenAndClose()}\n            updateForm={(item) => {\n              onEdit(item);\n            }}\n          />\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}